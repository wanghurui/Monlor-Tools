#---------------【ShadowSocks】-----------------
shadowsocksAdd() {
	read -p "输入$appname(r)节点名：" ss_id
	[ -z "$ss-id" ] && return
	read -p "输入$appname服务器地址：" ss_server
	read -p "输入$appname服务器端口：" ss_port
	read -p "输入$appname服务器密码：" ss_passwd
	read -p "输入$appname加密方式：" ss_method
	read -p "输入$appname协议(protocols)：" ss_protocols
	read -p "输入$appname混淆（obfs）：" ss_obfs
	if [ ! -z "$ss_id" ]; then
		read -p "确定要添加配置：$ss_id,$ss_server,$ss_port,$ss_passwd,$ss_method,$ss_protocols,$ss_obfs？[1/0] " res
		if [ "$res" == '1' ]; then
			sed -i "/^$ss_id,/d" $SSID
			echo "$ss_id,$ss_server,$ss_port,$ss_passwd,$ss_method,$ss_protocols,$ss_obfs" >> $SSID
		fi
	fi
	read -p "添加完成，再添加一个？[1/0] " res
	if [ `checkread $res` == '0' ]; then
		[ "$res" == '1' ] && shadowsocksAdd
	fi
}

shadowsocksDel() {
	sslist=$(cat $SSID | cut -d, -f1 | grep -n . )
	echo "$appname节点：[`echo $sslist`]"
	read -p "请选择要删除的节点：" res
	for i in $sslist
	do
		if [ `echo $i | grep -wc $res` -eq 1 ]; then
			res="`echo $i | cut -d: -f2`"
		fi
	done
	[ ! -z "$res" ] && sed -i "/^$res,/d" $SSID
	read -p "删除完成，继续删除？[1/0] " res
	if [ `checkread $res` == '0' ]; then
		[ "$res" == '1' ] && shadowsocksDel
	fi
}

shadowsocks() {

	appname=shadowsocks
	service=ShadowSocks
	SSID=$monlorpath/apps/$appname/config/ssserver.conf 
	[ ! -f $SSID ] && touch $SSID
	sslist=$(cat $SSID | cut -d, -f1 | grep -n . )
	uciset="uci set monlor.$appname"
	$uciset=config && $uciset.service=$service
	control=$monlorpath/apps/$appname/config/sscontrol.conf
	[ ! -f "$control" ] && touch $control
	echo "********* $service ***********"
	read -p "启动$appname服务？[1/0] " enable
	[ `checkread $enable` == '0' ] && $uciset.enable="$enable" || $uciset.enable="0"
	if [ "$enable" == '1' ]; then
		[ -z "$sslist" ] && sslist="空"
		echo "$appname节点：[`echo $sslist`]"
		read -p "添加$appname节点？[1/0] " res
		[ "$res" == '1' ] && shadowsocksAdd
		id=$(uci -q get monlor.$appname.id)
		ss_mode=$(uci -q get monlor.$appname.ss_mode)
		[ -z $id ] && id="空"
		[ -z $ss_mode ] && ss_mode="空"
		read -p "修改$appname配置($id, $ss_mode)？[1/0] " res
		if [ "$res" == '1' ]; then
			sslist=$(cat $SSID | cut -d, -f1 | grep -n . )
			[ -z "$sslist" ] && sslist="空"
			echo "$appname节点：[`echo $sslist`]"
			read -p "请选择$appname节点：" res
			for i in $sslist
			do
				if [ `echo $i | grep -wc $res` -eq 1 ]; then
					$uciset.id="`echo $i | cut -d: -f2`"
				fi
			done
			echo "[1.gfwlist 2.whitelist 3.wholemode]"
			read -p "请选择$appname模式：" res
			case "$res" in
				1) res="gfwlist" ;;
				2) res="whitelist" ;;
				3) res="wholemode" ;;
				*) res="gfwlist" ;;
			esac
			$uciset.ss_mode="$res"
		fi
		read -p "进入$appname高级设置？[1/0] " res
		if [ "$res" == '1' ]; then
			read -p "删除$appname节点？[1/0] " res
			[ "$res" == '1' ] && shadowsocksDel
			read -p "启动$appname游戏模式？[1/0] " res
			[ `checkread $res` == '0' ] && $uciset.ssgena="$res" 
			if [ "$res" == '1' ]; then
				ssgid=$(uci -q get monlor.$appname.ssgid)
				ssg_mode=$(uci -q get monlor.$appname.ssg_mode)
				[ -z $ssgid ] && ssgid="空"
				[ -z $ssg_mode ] && ssg_mode="空"
				read -p "修改$appname游戏配置($ssgid, $ssg_mode)？[1/0] " res
				if [ "$res" == '1' ]; then
					echo "$appname节点：[`echo $sslist`]"
					read -p "请选择$appname游戏节点：" res
					for i in $sslist
					do
						if [ `echo $i | grep -wc $res` -eq 1 ]; then
							$uciset.ssgid="`echo $i | cut -d: -f2`"
						fi
					done
					echo "[1.cngame 2.frgame]"
					read -p "请选择$appname游戏模式：" res
					case "$res" in
						1) res="cngame" ;;
						2) res="frgame" ;;
						*) res="frgame" ;;
					esac
					$uciset.ssg_mode="$res"
				fi
			fi
			# 显示局域网控制
			cat $control | while read line
			do
				name=$(cutsh $line 1)
				mode=$(cutsh $line 4)
				case "$mode" in
					0) mode="不走代理" ;;
					1) mode="科学上网" ;;
					*) mode="空"
				esac
				echo "设备[$name]运行模式为: $mode"
			done
			mode=$(uci -q get monlor.$appname.ss_acl_default_mode)
			case "$mode" in
				0) mode="不走代理" ;;
				1) mode="科学上网" ;;
				*) mode="科学上网"
			esac
			echo "其余设备运行模式为: $mode"
			read -p "设置局域网代理控制？[1/0] " res
			if [ "$res" == '1' ]; then
				read -p "清空之前的配置再添加？[1/0] " res
				[ "$res" == '1' ] && echo -n > $control
				i=0
				cat /tmp/dhcp.leases | while read line
				do
					name=$(echo $line | cut -d' ' -f4)
					mac=$(echo $line | cut -d' ' -f2)
					ip=$(echo $line | cut -d' ' -f3)

					let i=$i+1
					echo "$i. $name [$ip] [$mac]"
					
				done
				while(true) 
				do
					read -p "请选择一个设备：" res
					line=$(cat /tmp/dhcp.leases | grep -n . | grep -w "^$res")
					if [ ! -z "$line" ]; then
						name=$(echo $line | cut -d' ' -f4)
						mac=$(echo $line | cut -d' ' -f2)
						read -p "请选择(0.不代理 1.代理)：" res
						if [ `checkread $res` == '0' ]; then
							if [ ! -z "$mac" ]; then
								sed -i "/^$name/d" $control
								echo "$name,$mac,$res" >> $control
							else
								echo "mac不能为空, 添加失败！"
							fi
						else
							echo "输入有误, 添加失败"
						fi
					else
						echo "未找到设备, 添加失败！"
					fi
					read -p "继续增加设备？[1/0] " res
					[ "$res" == '0' ] && break
				done
				read -p "请选择其余设备(0.不代理 1.代理) " res
				[ `checkread $res` == '0' ] && $uciset.ss_acl_default_mode="$res"

			fi
		fi
	fi
	if [ "$enable" == '1' ]; then
		$monlorpath/apps/$appname/script/$appname.sh restart
	else
		$monlorpath/apps/$appname/script/$appname.sh stop
	fi


}
#---------------【ShadowSocks】-----------------